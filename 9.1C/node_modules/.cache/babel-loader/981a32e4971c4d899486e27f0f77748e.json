{"ast":null,"code":"import _defineProperty from \"/Users/olivia/Desktop/9.1C/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/olivia/Desktop/9.1C/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/olivia/Desktop/9.1C/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/olivia/Desktop/9.1C/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/olivia/Desktop/9.1C/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/olivia/Desktop/9.1C/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/olivia/Desktop/9.1C/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/olivia/Desktop/9.1C/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/olivia/Desktop/9.1C/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/olivia/Desktop/9.1C/src/FindQuestions.jsx\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Card, Input } from 'semantic-ui-react';\nimport QuestionCard from './QuestionCard';\nimport Header from './Header';\nimport db from \"./firebase\";\nimport { collection, query, getDocs } from \"firebase/firestore\";\n\nvar FindQuestions = /*#__PURE__*/function (_React$Component) {\n  _inherits(FindQuestions, _React$Component);\n\n  function FindQuestions() {\n    var _this;\n\n    _classCallCheck(this, FindQuestions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FindQuestions).call(this));\n    _this.gatherQuestions = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var search, snapshot, questionList;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              search = query(collection(db, \"Questions\"));\n              _context.next = 3;\n              return getDocs(search);\n\n            case 3:\n              snapshot = _context.sent;\n              questionList = snapshot.docs.map(function (doc, index) {\n                return /*#__PURE__*/React.createElement(QuestionCard, {\n                  key: index,\n                  id: doc.id,\n                  title: doc.data().title,\n                  problem: doc.data().problem,\n                  tags: doc.data().tags,\n                  date: doc.data().creationDate,\n                  __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 13\n                  }\n                });\n              });\n\n              _this.setState({\n                questions: questionList,\n                empty: false\n              });\n\n              if (questionList.length === 0) {\n                _this.setState({\n                  empty: true\n                });\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.filterQuestions = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var search, snapshot, questions, Searchresult, searchboxValue, SearchresultDate, questionList;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              search = query(collection(db, \"Questions\"));\n              _context2.next = 3;\n              return getDocs(search);\n\n            case 3:\n              snapshot = _context2.sent;\n              questions = snapshot.docs.map(function (doc) {\n                return _objectSpread({\n                  id: doc.id\n                }, doc.data());\n              });\n              Searchresult = null;\n              searchboxValue = null; //Date Selected\n\n              if (_this.state.searchDate !== null) {\n                SearchresultDate = questions.filter(function (question) {\n                  return question.creationDate === \"\".concat(_this.state.searchDate.getDate(), \"/\").concat(_this.state.searchDate.getMonth() + 1, \"/\").concat(_this.state.searchDate.getFullYear());\n                });\n\n                if (_this.state.SearchBox !== \"\") {\n                  searchboxValue = _this.state.SearchBox;\n                  Searchresult = SearchresultDate.filter(function (question) {\n                    return question.title.includes(searchboxValue) || question.tags.includes(searchboxValue);\n                  });\n                } else {\n                  Searchresult = SearchresultDate;\n                } //Date not selected\n\n              } else {\n                if (_this.state.SearchBox !== \"\") {\n                  searchboxValue = _this.state.SearchBox;\n                  Searchresult = questions.filter(function (question) {\n                    return question.title.includes(searchboxValue) || question.tags.includes(searchboxValue);\n                  });\n                } else {\n                  //No search\n                  Searchresult = questions;\n                }\n              }\n\n              if (Searchresult !== null && Searchresult.length > 0) {\n                questionList = Searchresult.map(function (question, index) {\n                  return /*#__PURE__*/React.createElement(QuestionCard, {\n                    key: index,\n                    id: question.id,\n                    title: question.title,\n                    problem: question.problem,\n                    tags: question.tags,\n                    date: question.creationDate,\n                    __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 17\n                    }\n                  });\n                });\n\n                _this.setState({\n                  questions: questionList,\n                  empty: false\n                });\n              } else {\n                _this.setState({\n                  empty: true,\n                  questions: []\n                });\n              }\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.updateSearch = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n\n      _this.filterQuestions();\n    };\n\n    _this.state = {\n      questions: null,\n      SearchBox: \"\",\n      searchDate: null,\n      empty: false\n    };\n\n    _this.gatherQuestions();\n\n    return _this;\n  }\n\n  _createClass(FindQuestions, [{\n    key: \"setSearchDate\",\n    value: function setSearchDate(date) {\n      this.setState({\n        searchDate: date\n      });\n      this.filterQuestions();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"questionSearchContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        className: \"questionSearch\",\n        value: this.state.SearchBox,\n        name: \"SearchBox\",\n        icon: \"search\",\n        onChange: this.updateSearch,\n        placeholder: \"Search for a question by title or tag...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          marginTop: '-3px',\n          marginBottom: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, \"Search by Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n        selected: this.state.searchDate,\n        onSelect: function onSelect(date) {\n          return _this2.setSearchDate(date);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }))), this.state.empty && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"questionSearchContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 38\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 79\n        }\n      }, \"No Questions to Display\")), /*#__PURE__*/React.createElement(Card.Group, {\n        className: \"centered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, this.state.questions));\n    }\n  }]);\n\n  return FindQuestions;\n}(React.Component);\n\nexport default FindQuestions;","map":{"version":3,"names":["React","DatePicker","Card","Input","QuestionCard","Header","db","collection","query","getDocs","FindQuestions","gatherQuestions","search","snapshot","questionList","docs","map","doc","index","id","data","title","problem","tags","creationDate","setState","questions","empty","length","filterQuestions","Searchresult","searchboxValue","state","searchDate","SearchresultDate","filter","question","getDate","getMonth","getFullYear","SearchBox","includes","updateSearch","e","target","name","value","date","marginLeft","marginTop","marginBottom","setSearchDate","Component"],"sources":["/Users/olivia/Desktop/9.1C/src/FindQuestions.jsx"],"sourcesContent":["\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nimport { Card, Input } from 'semantic-ui-react'\nimport QuestionCard from './QuestionCard';\nimport Header from './Header';\n\nimport db from \"./firebase\"\nimport { collection, query, getDocs } from \"firebase/firestore\";\n\n\nclass FindQuestions extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            questions: null,\n            SearchBox: \"\",\n            searchDate: null,\n            empty: false\n        };\n        this.gatherQuestions();\n    }\n\n    gatherQuestions = async () => {\n\n        const search = query(\n            collection(db, \"Questions\"),\n        );\n\n        const snapshot = await getDocs(search);\n\n        const questionList = snapshot.docs.map((doc, index) =>\n            <QuestionCard key={index}\n                id={doc.id}\n                title={doc.data().title}\n                problem={doc.data().problem}\n                tags={doc.data().tags}\n                date={doc.data().creationDate}\n            />\n        );\n\n        this.setState({ questions: questionList, empty: false });\n\n        if (questionList.length === 0) {\n            this.setState({ empty: true });\n        }\n    }\n\n    filterQuestions = async () => {\n\n        const search = query(\n            collection(db, \"Questions\"),\n        );\n\n        const snapshot = await getDocs(search);\n\n        var questions = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n\n        var Searchresult = null;\n        var searchboxValue = null;\n\n        //Date Selected\n        if (this.state.searchDate !== null) {\n            var SearchresultDate = questions.filter(question => (question.creationDate) === `${this.state.searchDate.getDate()}/${this.state.searchDate.getMonth() + 1}/${this.state.searchDate.getFullYear()}`)\n\n            if (this.state.SearchBox !== \"\") {\n                searchboxValue = this.state.SearchBox;\n                Searchresult = SearchresultDate.filter(question => (question.title).includes(searchboxValue) || (question.tags).includes(searchboxValue));\n            } else {\n                Searchresult = SearchresultDate;\n            }\n            //Date not selected\n        } else {\n            if (this.state.SearchBox !== \"\") {\n                searchboxValue = this.state.SearchBox;\n                Searchresult = questions.filter(question => (question.title).includes(searchboxValue) || (question.tags).includes(searchboxValue));\n\n            } else {\n                //No search\n                Searchresult = questions;\n            }\n\n        }\n\n        if (Searchresult !== null && Searchresult.length > 0) {\n\n            const questionList = Searchresult.map((question, index) =>\n                <QuestionCard key={index}\n                    id={question.id}\n                    title={question.title}\n                    problem={question.problem}\n                    tags={question.tags}\n                    date={question.creationDate}\n                />\n\n            );\n            this.setState({ questions: questionList, empty: false });\n        } else {\n            this.setState({ empty: true, questions: [] });\n        }\n\n    }\n\n\n    updateSearch = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n\n        this.filterQuestions();\n\n    }\n\n    setSearchDate(date) {\n\n        this.setState({ searchDate: date });\n        this.filterQuestions();\n\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <Header />\n                <div className='questionSearchContainer'>\n                    <Input className=\"questionSearch\" value={this.state.SearchBox} name='SearchBox' icon='search' onChange={this.updateSearch} placeholder='Search for a question by title or tag...' />\n                    <div style={{ marginLeft: '20px' }}>\n                        <h4 style={{ marginTop: '-3px', marginBottom: '5px' }}>Search by Date</h4>\n                        <DatePicker selected={this.state.searchDate} onSelect={(date) => this.setSearchDate(date)} />\n                    </div>\n\n                </div>\n\n                {this.state.empty && <div className=\"questionSearchContainer\"><h1>No Questions to Display</h1></div>}\n\n\n                    <Card.Group className='centered'>\n                        {this.state.questions}\n                    </Card.Group>\n\n\n\n\n            </div >\n\n        )\n    }\n}\nexport default FindQuestions\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}