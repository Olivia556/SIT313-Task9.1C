{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _templateObject = _taggedTemplateLiteral(['\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n'], ['\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n']),\n    _templateObject2 = _taggedTemplateLiteral(['\\n    position: relative;\\n    min-height: ', ';\\n'], ['\\n    position: relative;\\n    min-height: ', ';\\n']),\n    _templateObject3 = _taggedTemplateLiteral(['\\n    background-attachment: ', ';\\n    background-image: url(', ');\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    background-size: ', ';\\n    opacity: ', ';\\n    transition-duration: ', ';\\n    transition-property: opacity;\\n    transition-timing-function: ', ';\\n'], ['\\n    background-attachment: ', ';\\n    background-image: url(', ');\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    background-size: ', ';\\n    opacity: ', ';\\n    transition-duration: ', ';\\n    transition-property: opacity;\\n    transition-timing-function: ', ';\\n']),\n    _templateObject4 = _taggedTemplateLiteral(['\\n    display: flex;\\n    justify-content: ', ';\\n    align-items: ', ';\\n    text-align: ', ';\\n    background-color: ', ';\\n'], ['\\n    display: flex;\\n    justify-content: ', ';\\n    align-items: ', ';\\n    text-align: ', ';\\n    background-color: ', ';\\n']);\n\nvar _color = require('color');\n\nvar _color2 = _interopRequireDefault(_color);\n\nvar _inViewport = require('in-viewport');\n\nvar _inViewport2 = _interopRequireDefault(_inViewport);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _styledComponents = require('styled-components');\n\nvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n} // React is a peer dependency\n// eslint-disable-next-line import/no-unresolved, import/extensions\n// styled-components is a peer dependency\n// eslint-disable-next-line import/no-unresolved, import/extensions\n\n\nvar Cover = _styledComponents2.default.div(_templateObject);\n\nvar Root = _styledComponents2.default.div(_templateObject2, function (props) {\n  return props.minHeight;\n});\n\nvar Img = (0, _styledComponents2.default)(Cover)(_templateObject3, function (props) {\n  return props.isFixed ? 'fixed' : 'scroll';\n}, function (props) {\n  return props.imageSrc;\n}, function (props) {\n  return props.imageWidth ? props.imageWidth + 'px ' + props.imageHeight + 'px' : 'cover';\n}, function (props) {\n  return props.isVisible ? 1 : 0;\n}, function (props) {\n  return props.transitionDuration + 'ms';\n}, function (props) {\n  return props.transitionTimingFunction;\n});\nvar Overlay = (0, _styledComponents2.default)(Cover)(_templateObject4, function (props) {\n  return props.isCentered ? 'center' : 'flex-start';\n}, function (props) {\n  return props.isCentered ? 'center' : 'stretch';\n}, function (props) {\n  return props.isCentered ? 'center' : 'left';\n}, function (props) {\n  return (0, _color2.default)(props.color).alpha(props.opacity).rgb().string();\n});\n\nvar LazyHero = function (_Component) {\n  _inherits(LazyHero, _Component);\n\n  function LazyHero() {\n    _classCallCheck(this, LazyHero);\n\n    var _this = _possibleConstructorReturn(this, (LazyHero.__proto__ || Object.getPrototypeOf(LazyHero)).call(this));\n\n    _this.state = {\n      backgroundPositionY: 'center',\n      backgroundDimensions: null,\n      heroDimensions: null,\n      image: null,\n      isInViewport: false\n    };\n    _this.handleResize = _this.handleResize.bind(_this);\n    _this.handleScroll = _this.handleScroll.bind(_this);\n    _this.updatePosition = _this.updatePosition.bind(_this);\n    _this.updateSize = _this.updateSize.bind(_this);\n    return _this;\n  }\n\n  _createClass(LazyHero, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      (0, _inViewport2.default)(this.ref, function () {\n        return _this2.setState({\n          isInViewport: true\n        });\n      });\n      this.loadImage();\n\n      if (this.props.parallaxOffset > 0) {\n        window.addEventListener('scroll', this.handleScroll);\n        window.addEventListener('resize', this.handleResize);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.imageSrc !== this.props.imageSrc) {\n        this.loadImage();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.props.parallaxOffset > 0) {\n        window.removeEventListener('scroll', this.handleScroll);\n        window.removeEventListener('resize', this.handleResize);\n      }\n    }\n  }, {\n    key: 'handleScroll',\n    value: function handleScroll() {\n      this.updatePosition();\n    }\n  }, {\n    key: 'handleResize',\n    value: function handleResize() {\n      this.updateSize();\n      this.updatePosition();\n    }\n  }, {\n    key: 'loadImage',\n    value: function loadImage() {\n      var _this3 = this;\n\n      var image = new Image();\n      image.src = this.props.imageSrc;\n\n      image.onload = function () {\n        _this3.setState({\n          image: image\n        });\n\n        if (_this3.props.parallaxOffset > 0) {\n          _this3.updateSize();\n\n          _this3.updatePosition();\n        }\n      };\n    }\n  }, {\n    key: 'updateSize',\n    value: function updateSize() {\n      if (!this.state.image) return;\n      var heroDimensions = {\n        height: this.ref.offsetHeight,\n        width: this.ref.offsetWidth\n      };\n      var imageDimensions = {\n        height: this.state.image.height,\n        width: this.state.image.width\n      };\n      var resizedImage = (0, _utils.resizeToCover)(imageDimensions, heroDimensions);\n      var initialVisibleImageHeight = resizedImage.height - this.props.parallaxOffset;\n      var minHeight = initialVisibleImageHeight < heroDimensions.height ? resizedImage.height + heroDimensions.height - initialVisibleImageHeight : resizedImage.height;\n      var finalHeight = minHeight + this.ref.offsetTop * 2;\n      var backgroundDimensions = (0, _utils.resizeToCover)(imageDimensions, {\n        height: finalHeight\n      });\n      this.setState({\n        backgroundDimensions: backgroundDimensions,\n        heroDimensions: heroDimensions\n      });\n    }\n  }, {\n    key: 'updatePosition',\n    value: function updatePosition() {\n      if (!this.state.backgroundDimensions) return;\n      var position = 0 + this.ref.offsetTop // Center image vertically\n      - this.state.backgroundDimensions.height / 2 + this.state.heroDimensions.height / 2 - this.props.parallaxOffset / 2 // Apply scroll position\n      + this.props.parallaxOffset * (0, _utils.scrolledOverPercent)(this.ref);\n      this.setState({\n        backgroundPositionY: Math.round(position) + 'px'\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _state = this.state,\n          backgroundDimensions = _state.backgroundDimensions,\n          backgroundPositionY = _state.backgroundPositionY;\n      return _react2.default.createElement(Root, {\n        className: this.props.className,\n        ref: function ref(r) {\n          _this4.ref = r;\n        },\n        minHeight: this.props.minHeight,\n        style: this.props.style\n      }, _react2.default.createElement(Img, {\n        isVisible: this.state.image && this.state.isInViewport,\n        isFixed: this.props.isFixed || this.props.parallaxOffset > 0,\n        imageHeight: backgroundDimensions && backgroundDimensions.height,\n        imageSrc: this.props.imageSrc,\n        imageWidth: backgroundDimensions && backgroundDimensions.width,\n        style: {\n          backgroundPositionY: backgroundPositionY\n        },\n        transitionDuration: this.props.transitionDuration,\n        transitionTimingFunction: this.props.transitionTimingFunction\n      }), _react2.default.createElement(Overlay, {\n        color: this.props.color,\n        isCentered: this.props.isCentered,\n        opacity: this.props.opacity\n      }, this.props.children && _react2.default.createElement('div', null, this.props.children)));\n    }\n  }]);\n\n  return LazyHero;\n}(_react.Component);\n\nLazyHero.defaultProps = {\n  children: undefined,\n  className: undefined,\n  color: '#fff',\n  imageSrc: undefined,\n  isCentered: true,\n  isFixed: false,\n  minHeight: '50vh',\n  opacity: 0.8,\n  parallaxOffset: 0,\n  style: undefined,\n  transitionDuration: 600,\n  transitionTimingFunction: 'ease-in-out'\n};\nLazyHero.propTypes = {\n  children: _propTypes2.default.node,\n  className: _propTypes2.default.string,\n  color: _propTypes2.default.string,\n  imageSrc: _propTypes2.default.string,\n  isCentered: _propTypes2.default.bool,\n  isFixed: _propTypes2.default.bool,\n  minHeight: _propTypes2.default.string,\n  opacity: _propTypes2.default.number,\n  parallaxOffset: _propTypes2.default.number,\n  style: _propTypes2.default.object,\n  // eslint-disable-line react/forbid-prop-types\n  transitionDuration: _propTypes2.default.number,\n  transitionTimingFunction: _propTypes2.default.string\n};\nexports.default = LazyHero;","map":null,"metadata":{},"sourceType":"script"}